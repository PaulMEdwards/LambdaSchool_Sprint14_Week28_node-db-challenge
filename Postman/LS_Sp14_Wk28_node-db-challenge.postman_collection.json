{
	"info": {
		"_postman_id": "b506847e-28c4-44c9-9ca3-f78f1c537d7e",
		"name": "LS_Sp14_Wk28_node-db-challenge",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "POST",
			"item": [
				{
					"name": "POST /api/projects (missing required data)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "8b6bd3b5-3913-4ebd-937c-93f56dae29a5",
								"exec": [
									"var res = pm.response.json();",
									"",
									"pm.test('Failure', () => {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"pm.test('Data Size', () => {",
									"    pm.expect(res.project).to.be.undefined;",
									"});",
									"",
									"pm.test('Data Value(s)', () => {",
									"    pm.expect(res.message).to.equal(\"Required data missing\");",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/projects",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"projects"
							]
						}
					},
					"response": [
						{
							"name": "POST /api/projects (missing required data)",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL}}/api/projects",
									"host": [
										"{{URL}}"
									],
									"path": [
										"api",
										"projects"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "35"
								},
								{
									"key": "ETag",
									"value": "W/\"23-k/F9z98s0+ugeNZx+iEQXV7rMp4\""
								},
								{
									"key": "Date",
									"value": "Mon, 10 Feb 2020 01:59:52 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"Required data missing\"\n}"
						}
					]
				},
				{
					"name": "POST /api/projects (valid)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "84d20fc1-f559-4506-8cda-8c9c242e8369",
								"exec": [
									"var res = pm.response.json();",
									"",
									"pm.test('Success', () => {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"pm.test('Data Value(s)', () => {",
									"    pm.expect(res.id).to.be.at.least(2);",
									"});",
									"",
									"//Store generated account ID for reuse in subsequent tests",
									"var pid = res.id;",
									"pm.collectionVariables.set(\"ProjectID\", pid);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": \"Test Project\",\n\t\"description\": \"Test Project Description\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/projects",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"projects"
							]
						}
					},
					"response": [
						{
							"name": "POST /api/projects (valid)",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"name\": \"Test Project\",\n\t\"description\": \"Test Project Description\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL}}/api/projects",
									"host": [
										"{{URL}}"
									],
									"path": [
										"api",
										"projects"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "108"
								},
								{
									"key": "ETag",
									"value": "W/\"6c-YbgMjXNzjk/dDj4wCq5t5E1rh0c\""
								},
								{
									"key": "Date",
									"value": "Mon, 10 Feb 2020 03:27:04 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": 2,\n    \"name\": \"Test Project\",\n    \"description\": \"Test Project Description\",\n    \"completed\": 0,\n    \"due\": null,\n    \"done\": null\n}"
						}
					]
				},
				{
					"name": "POST /api/projects/:projectId/tasks (projectId not found)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "84d20fc1-f559-4506-8cda-8c9c242e8369",
								"exec": [
									"var res = pm.response.json();",
									"",
									"pm.test('Failure', () => {",
									"    pm.response.to.have.status(404);",
									"});",
									"",
									"pm.test('Data Size', () => {",
									"    pm.expect(res.projectTask).to.be.undefined;",
									"});",
									"",
									"pm.test('Error Message', () => {",
									"    pm.expect(res.message).to.equal(\"Could not get project with given projectId\");",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"description\": \"Test Task\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/projects/999/tasks",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"projects",
								"999",
								"tasks"
							]
						}
					},
					"response": [
						{
							"name": "POST /api/projects/:projectId/tasks (projectId not found)",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"description\": \"Test Task\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL}}/api/projects/999/tasks",
									"host": [
										"{{URL}}"
									],
									"path": [
										"api",
										"projects",
										"999",
										"tasks"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "57"
								},
								{
									"key": "ETag",
									"value": "W/\"39-J0IBcbbFeGgfR7ns2P1vJ8w5oUQ\""
								},
								{
									"key": "Date",
									"value": "Mon, 10 Feb 2020 02:20:30 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"Could not get project with given projectId\"\n}"
						}
					]
				},
				{
					"name": "POST /api/projects/:projectId/tasks (missing required data)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "84d20fc1-f559-4506-8cda-8c9c242e8369",
								"exec": [
									"var res = pm.response.json();",
									"",
									"pm.test('Failure', () => {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"pm.test('Data Size', () => {",
									"    pm.expect(res.projectTask).to.be.undefined;",
									"});",
									"",
									"pm.test('Data Value(s)', () => {",
									"    pm.expect(res.message).to.equal(\"Required data missing\");",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/projects/{{ProjectID}}/tasks",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"projects",
								"{{ProjectID}}",
								"tasks"
							]
						}
					},
					"response": [
						{
							"name": "POST /api/projects/:projectId/tasks (missing required data)",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL}}/api/projects/{{ProjectID}}/tasks",
									"host": [
										"{{URL}}"
									],
									"path": [
										"api",
										"projects",
										"{{ProjectID}}",
										"tasks"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "35"
								},
								{
									"key": "ETag",
									"value": "W/\"23-k/F9z98s0+ugeNZx+iEQXV7rMp4\""
								},
								{
									"key": "Date",
									"value": "Mon, 10 Feb 2020 02:00:37 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"Required data missing\"\n}"
						}
					]
				},
				{
					"name": "POST /api/projects/:projectId/tasks (valid)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "84d20fc1-f559-4506-8cda-8c9c242e8369",
								"exec": [
									"var res = pm.response.json();",
									"",
									"pm.test('Success', () => {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"pm.test('Data Value(s)', () => {",
									"    pm.expect(res.id).to.be.at.least(4);",
									"});",
									"",
									"//Store generated account ID for reuse in subsequent tests",
									"var tid = res.id;",
									"pm.collectionVariables.set(\"TaskID\", tid);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"description\": \"Test Task\",\n\t\"notes\": \"Test Task Notes\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/projects/{{ProjectID}}/tasks",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"projects",
								"{{ProjectID}}",
								"tasks"
							]
						}
					},
					"response": [
						{
							"name": "POST /api/projects/:projectId/tasks (valid)",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"description\": \"Test Task\",\n\t\"notes\": \"Test Task Notes\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL}}/api/projects/{{ProjectID}}/tasks",
									"host": [
										"{{URL}}"
									],
									"path": [
										"api",
										"projects",
										"{{ProjectID}}",
										"tasks"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "191"
								},
								{
									"key": "ETag",
									"value": "W/\"bf-X8kKdu5SuAs+6HRR1NFqb042RFY\""
								},
								{
									"key": "Date",
									"value": "Mon, 10 Feb 2020 02:54:43 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": 4,\n    \"project_id\": 2,\n    \"description\": \"Test Task\",\n    \"notes\": \"Test Task Notes\",\n    \"completed\": 0,\n    \"due\": null,\n    \"done\": null,\n    \"project_name\": \"Test Project\",\n    \"project_description\": \"Test Project Description\"\n}"
						}
					]
				},
				{
					"name": "POST /api/resources (missing required data)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "8b6bd3b5-3913-4ebd-937c-93f56dae29a5",
								"exec": [
									"var res = pm.response.json();",
									"",
									"pm.test('Failure', () => {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"pm.test('Data Size', () => {",
									"    pm.expect(res.projectResource).to.be.undefined;",
									"});",
									"",
									"pm.test('Data Value(s)', () => {",
									"    pm.expect(res.message).to.equal(\"Required data missing\");",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/resources",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"resources"
							]
						}
					},
					"response": [
						{
							"name": "POST /api/resources (missing required data)",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL}}/api/resources",
									"host": [
										"{{URL}}"
									],
									"path": [
										"api",
										"resources"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "35"
								},
								{
									"key": "ETag",
									"value": "W/\"23-k/F9z98s0+ugeNZx+iEQXV7rMp4\""
								},
								{
									"key": "Date",
									"value": "Mon, 10 Feb 2020 02:04:13 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"Required data missing\"\n}"
						}
					]
				},
				{
					"name": "POST /api/resources (valid)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "84d20fc1-f559-4506-8cda-8c9c242e8369",
								"exec": [
									"var res = pm.response.json();",
									"",
									"pm.test('Success', () => {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"pm.test('Data Value(s)', () => {",
									"    pm.expect(res.id).to.be.at.least(3);",
									"});",
									"",
									"//Store generated account ID for reuse in subsequent tests",
									"var rid = res.id;",
									"pm.collectionVariables.set(\"ResourceID\", rid);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": \"Test Resource\",\n\t\"description\": \"Test Resource Description\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/resources",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"resources"
							]
						}
					},
					"response": [
						{
							"name": "POST /api/resources (valid)",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"name\": \"Test Resource\",\n\t\"description\": \"Test Resource Description\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL}}/api/resources",
									"host": [
										"{{URL}}"
									],
									"path": [
										"api",
										"resources"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "73"
								},
								{
									"key": "ETag",
									"value": "W/\"49-jtx/ANPjvpwUklzfDE4yraIfg7o\""
								},
								{
									"key": "Date",
									"value": "Mon, 10 Feb 2020 02:05:37 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": 3,\n    \"name\": \"Test Resource\",\n    \"description\": \"Test Resource Description\"\n}"
						}
					]
				},
				{
					"name": "POST /api/projects/:projectId/resources/:resourceId (projectId not found)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "84d20fc1-f559-4506-8cda-8c9c242e8369",
								"exec": [
									"var res = pm.response.json();",
									"",
									"pm.test('Failure', () => {",
									"    pm.response.to.have.status(404);",
									"});",
									"",
									"pm.test('Data Size', () => {",
									"    pm.expect(res.projectResource).to.be.undefined;",
									"});",
									"",
									"pm.test('Error Message', () => {",
									"    pm.expect(res.message).to.equal(\"Could not get project with given projectId\");",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/projects/999/resources/999",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"projects",
								"999",
								"resources",
								"999"
							]
						}
					},
					"response": [
						{
							"name": "POST /api/projects/:projectId/resources/:resourceId (projectId not found)",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"scheme_name\": \"Test Scheme\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL}}/api/projects/999/resources/999",
									"host": [
										"{{URL}}"
									],
									"path": [
										"api",
										"projects",
										"999",
										"resources",
										"999"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "57"
								},
								{
									"key": "ETag",
									"value": "W/\"39-J0IBcbbFeGgfR7ns2P1vJ8w5oUQ\""
								},
								{
									"key": "Date",
									"value": "Mon, 10 Feb 2020 02:09:47 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"Could not get project with given projectId\"\n}"
						}
					]
				},
				{
					"name": "POST /api/projects/:projectId/resources/:resourceId (resourceId not found)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "84d20fc1-f559-4506-8cda-8c9c242e8369",
								"exec": [
									"var res = pm.response.json();",
									"",
									"pm.test('Failure', () => {",
									"    pm.response.to.have.status(404);",
									"});",
									"",
									"pm.test('Data Size', () => {",
									"    pm.expect(res.projectResource).to.be.undefined;",
									"});",
									"",
									"pm.test('Error Message', () => {",
									"    pm.expect(res.message).to.equal(\"Could not get resource with given resourceId\");",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/projects/{{ProjectID}}/resources/999",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"projects",
								"{{ProjectID}}",
								"resources",
								"999"
							]
						}
					},
					"response": [
						{
							"name": "POST /api/projects/:projectId/resources/:resourceId (resourceId not found)",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL}}/api/projects/{{ProjectID}}/resources/999",
									"host": [
										"{{URL}}"
									],
									"path": [
										"api",
										"projects",
										"{{ProjectID}}",
										"resources",
										"999"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "59"
								},
								{
									"key": "ETag",
									"value": "W/\"3b-agR/CAgwmrg6abtJgCwjv1RyFUw\""
								},
								{
									"key": "Date",
									"value": "Mon, 10 Feb 2020 02:17:46 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"Could not get resource with given resourceId\"\n}"
						}
					]
				},
				{
					"name": "POST /api/projects/:projectId/resources/:resourceId (valid)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "84d20fc1-f559-4506-8cda-8c9c242e8369",
								"exec": [
									"pm.test('Success', () => {",
									"    pm.response.to.have.status(201);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/projects/{{ProjectID}}/resources/{{ResourceID}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"projects",
								"{{ProjectID}}",
								"resources",
								"{{ResourceID}}"
							]
						}
					},
					"response": [
						{
							"name": "POST /api/projects/:projectId/resources/:resourceId (valid)",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL}}/api/projects/{{ProjectID}}/resources/{{ResourceID}}",
									"host": [
										"{{URL}}"
									],
									"path": [
										"api",
										"projects",
										"{{ProjectID}}",
										"resources",
										"{{ResourceID}}"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Date",
									"value": "Mon, 10 Feb 2020 07:13:49 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Content-Length",
									"value": "0"
								}
							],
							"cookie": [],
							"body": null
						}
					]
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "GET",
			"item": [
				{
					"name": "GET /api/projects",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "f0f3c8ca-fcc2-4eb5-a6c9-b6e40e6eba58",
								"exec": [
									"var res = pm.response.json();",
									"",
									"pm.test('Success', () => {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test('Data Size', () => {",
									"    pm.expect(res.length).to.be.at.least(1);",
									"});",
									"",
									"pm.test('Data Value(s)', () => {",
									"    pm.expect(res[0].name).to.equal(\"Default Project\");",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/projects",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"projects"
							]
						}
					},
					"response": [
						{
							"name": "GET /api/projects",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL}}/api/projects",
									"host": [
										"{{URL}}"
									],
									"path": [
										"api",
										"projects"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "225"
								},
								{
									"key": "ETag",
									"value": "W/\"e1-EvszHlE0MX1nq52FBBQ+LyFh8BI\""
								},
								{
									"key": "Date",
									"value": "Mon, 10 Feb 2020 03:29:30 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "[\n    {\n        \"id\": 1,\n        \"name\": \"Default Project\",\n        \"description\": \"Default Project Description\",\n        \"completed\": 0,\n        \"due\": null,\n        \"done\": null\n    },\n    {\n        \"id\": 2,\n        \"name\": \"Test Project\",\n        \"description\": \"Test Project Description\",\n        \"completed\": 0,\n        \"due\": null,\n        \"done\": null\n    }\n]"
						}
					]
				},
				{
					"name": "GET /api/projects/:projectId (not found)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "133dafd8-cfda-4da0-9b8a-3190d8c83402",
								"exec": [
									"var res = pm.response.json();",
									"",
									"pm.test('Failure', () => {",
									"    pm.response.to.have.status(404);",
									"});",
									"",
									"pm.test('Data Size', () => {",
									"    pm.expect(res.project).to.be.undefined;",
									"});",
									"",
									"pm.test('Error Message', () => {",
									"    pm.expect(res.message).to.equal(\"Could not get project with given projectId\");",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/projects/999",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"projects",
								"999"
							]
						}
					},
					"response": [
						{
							"name": "GET /api/projects/:projectId (not found)",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL}}/api/projects/999",
									"host": [
										"{{URL}}"
									],
									"path": [
										"api",
										"projects",
										"999"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "57"
								},
								{
									"key": "ETag",
									"value": "W/\"39-J0IBcbbFeGgfR7ns2P1vJ8w5oUQ\""
								},
								{
									"key": "Date",
									"value": "Mon, 10 Feb 2020 00:55:29 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"Could not get project with given projectId\"\n}"
						}
					]
				},
				{
					"name": "GET /api/projects/:projectId",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a935735f-f00c-49cb-b097-afdfcc2f6613",
								"exec": [
									"var res = pm.response.json();",
									"",
									"pm.test('Success', () => {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test('Data Value(s)', () => {",
									"    pm.expect(res.name).to.equal(\"Test Project\");",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/projects/{{ProjectID}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"projects",
								"{{ProjectID}}"
							]
						}
					},
					"response": [
						{
							"name": "GET /api/projects/:projectId",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL}}/api/projects/{{ProjectID}}",
									"host": [
										"{{URL}}"
									],
									"path": [
										"api",
										"projects",
										"{{ProjectID}}"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "108"
								},
								{
									"key": "ETag",
									"value": "W/\"6c-YbgMjXNzjk/dDj4wCq5t5E1rh0c\""
								},
								{
									"key": "Date",
									"value": "Mon, 10 Feb 2020 03:29:34 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": 2,\n    \"name\": \"Test Project\",\n    \"description\": \"Test Project Description\",\n    \"completed\": 0,\n    \"due\": null,\n    \"done\": null\n}"
						}
					]
				},
				{
					"name": "GET /api/projects/:projectId/tasks (not found)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a935735f-f00c-49cb-b097-afdfcc2f6613",
								"exec": [
									"var res = pm.response.json();",
									"",
									"pm.test('Failure', () => {",
									"    pm.response.to.have.status(404);",
									"});",
									"",
									"pm.test('Data Size', () => {",
									"    pm.expect(res.tasks).to.be.undefined;",
									"});",
									"",
									"pm.test('Error Message', () => {",
									"    pm.expect(res.message).to.equal(\"Could not get project with given projectId\");",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/projects/999/tasks",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"projects",
								"999",
								"tasks"
							]
						}
					},
					"response": [
						{
							"name": "GET /api/projects/:projectId/tasks (not found)",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL}}/api/projects/999/tasks",
									"host": [
										"{{URL}}"
									],
									"path": [
										"api",
										"projects",
										"999",
										"tasks"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "57"
								},
								{
									"key": "ETag",
									"value": "W/\"39-J0IBcbbFeGgfR7ns2P1vJ8w5oUQ\""
								},
								{
									"key": "Date",
									"value": "Mon, 10 Feb 2020 02:34:21 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"Could not get project with given projectId\"\n}"
						}
					]
				},
				{
					"name": "GET /api/projects/:projectId/tasks",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a935735f-f00c-49cb-b097-afdfcc2f6613",
								"exec": [
									"var res = pm.response.json();",
									"",
									"pm.test('Success', () => {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test('Data Size', () => {",
									"    pm.expect(res.length).to.be.at.least(1);",
									"});",
									"",
									"pm.test('Data Value(s)', () => {",
									"    pm.expect(res[0].description).to.equal(\"Test Task\");",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/projects/{{ProjectID}}/tasks",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"projects",
								"{{ProjectID}}",
								"tasks"
							]
						}
					},
					"response": [
						{
							"name": "GET /api/projects/:projectId/tasks",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL}}/api/projects/{{ProjectID}}/tasks",
									"host": [
										"{{URL}}"
									],
									"path": [
										"api",
										"projects",
										"{{ProjectID}}",
										"tasks"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "193"
								},
								{
									"key": "ETag",
									"value": "W/\"c1-fihERQOFy4CnNi+5l3wCxHvgsAg\""
								},
								{
									"key": "Date",
									"value": "Mon, 10 Feb 2020 02:59:49 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "[\n    {\n        \"id\": 4,\n        \"project_id\": 2,\n        \"description\": \"Test Task\",\n        \"notes\": \"Test Task Notes\",\n        \"completed\": 0,\n        \"due\": null,\n        \"done\": null,\n        \"project_name\": \"Test Project\",\n        \"project_description\": \"Test Project Description\"\n    }\n]"
						}
					]
				},
				{
					"name": "GET /api/projects/:projectId/tasks/:taskId",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a935735f-f00c-49cb-b097-afdfcc2f6613",
								"exec": [
									"var res = pm.response.json();",
									"",
									"pm.test('Success', () => {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test('Data Value(s)', () => {",
									"    pm.expect(res.description).to.equal(\"Test Task\");",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/projects/{{ProjectID}}/tasks/{{TaskID}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"projects",
								"{{ProjectID}}",
								"tasks",
								"{{TaskID}}"
							]
						}
					},
					"response": [
						{
							"name": "GET /api/projects/:projectId/tasks/:taskId",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL}}/api/projects/{{ProjectID}}/tasks/{{TaskID}}",
									"host": [
										"{{URL}}"
									],
									"path": [
										"api",
										"projects",
										"{{ProjectID}}",
										"tasks",
										"{{TaskID}}"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "191"
								},
								{
									"key": "ETag",
									"value": "W/\"bf-X8kKdu5SuAs+6HRR1NFqb042RFY\""
								},
								{
									"key": "Date",
									"value": "Mon, 10 Feb 2020 03:05:51 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": 4,\n    \"project_id\": 2,\n    \"description\": \"Test Task\",\n    \"notes\": \"Test Task Notes\",\n    \"completed\": 0,\n    \"due\": null,\n    \"done\": null,\n    \"project_name\": \"Test Project\",\n    \"project_description\": \"Test Project Description\"\n}"
						}
					]
				},
				{
					"name": "GET /api/resources",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "f0f3c8ca-fcc2-4eb5-a6c9-b6e40e6eba58",
								"exec": [
									"var res = pm.response.json();",
									"",
									"pm.test('Success', () => {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test('Data Size', () => {",
									"    pm.expect(res.length).to.be.at.least(3);",
									"});",
									"",
									"pm.test('Data Value(s)', () => {",
									"    pm.expect(res[2].name).to.equal(\"Test Resource\");",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/resources",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"resources"
							]
						}
					},
					"response": [
						{
							"name": "GET /api/resources",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL}}/api/resources",
									"host": [
										"{{URL}}"
									],
									"path": [
										"api",
										"resources"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "231"
								},
								{
									"key": "ETag",
									"value": "W/\"e7-z1vtZTMussA6R+5kgyXHstvwuKo\""
								},
								{
									"key": "Date",
									"value": "Mon, 10 Feb 2020 02:07:17 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "[\n    {\n        \"id\": 1,\n        \"name\": \"Test Resource 1\",\n        \"description\": \"Test Resource 1 Description\"\n    },\n    {\n        \"id\": 2,\n        \"name\": \"Test Resource 2\",\n        \"description\": \"Test Resource 2 Description\"\n    },\n    {\n        \"id\": 3,\n        \"name\": \"Test Resource\",\n        \"description\": \"Test Resource Description\"\n    }\n]"
						}
					]
				},
				{
					"name": "GET /api/resources/:resourceId (not found)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "133dafd8-cfda-4da0-9b8a-3190d8c83402",
								"exec": [
									"var res = pm.response.json();",
									"",
									"pm.test('Failure', () => {",
									"    pm.response.to.have.status(404);",
									"});",
									"",
									"pm.test('Data Size', () => {",
									"    pm.expect(res.resource).to.be.undefined;",
									"});",
									"",
									"pm.test('Error Message', () => {",
									"    pm.expect(res.message).to.equal(\"Could not get resource with given resourceId\");",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/resources/999",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"resources",
								"999"
							]
						}
					},
					"response": [
						{
							"name": "GET /api/resources/:resourceId (not found)",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL}}/api/resources/999",
									"host": [
										"{{URL}}"
									],
									"path": [
										"api",
										"resources",
										"999"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "58"
								},
								{
									"key": "ETag",
									"value": "W/\"3a-b4GpJN/cDvyw7ceX+9Gse+Rdzvg\""
								},
								{
									"key": "Date",
									"value": "Mon, 10 Feb 2020 03:17:03 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"Could not get resource with given resourceId\"\n}"
						}
					]
				},
				{
					"name": "GET /api/resources/:resourceId",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a935735f-f00c-49cb-b097-afdfcc2f6613",
								"exec": [
									"var res = pm.response.json();",
									"",
									"pm.test('Success', () => {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test('Data Value(s)', () => {",
									"    pm.expect(res.name).to.equal(\"Test Resource\");",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/resources/{{ResourceID}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"resources",
								"{{ResourceID}}"
							]
						}
					},
					"response": [
						{
							"name": "GET /api/resources/:resourceId",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL}}/api/resources/{{ResourceID}}",
									"host": [
										"{{URL}}"
									],
									"path": [
										"api",
										"resources",
										"{{ResourceID}}"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "73"
								},
								{
									"key": "ETag",
									"value": "W/\"49-jtx/ANPjvpwUklzfDE4yraIfg7o\""
								},
								{
									"key": "Date",
									"value": "Mon, 10 Feb 2020 03:17:36 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": 3,\n    \"name\": \"Test Resource\",\n    \"description\": \"Test Resource Description\"\n}"
						}
					]
				},
				{
					"name": "GET /api/projects/:projectId/resources (not found)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a935735f-f00c-49cb-b097-afdfcc2f6613",
								"exec": [
									"var res = pm.response.json();",
									"",
									"pm.test('Failure', () => {",
									"    pm.response.to.have.status(404);",
									"});",
									"",
									"pm.test('Data Size', () => {",
									"    pm.expect(res.projectResources).to.be.undefined;",
									"});",
									"",
									"pm.test('Error Message', () => {",
									"    pm.expect(res.message).to.equal(\"Could not get project with given projectId\");",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/projects/999/resources",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"projects",
								"999",
								"resources"
							]
						}
					},
					"response": [
						{
							"name": "GET /api/projects/:projectId/resources (not found)",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL}}/api/projects/999/resources",
									"host": [
										"{{URL}}"
									],
									"path": [
										"api",
										"projects",
										"999",
										"resources"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "56"
								},
								{
									"key": "ETag",
									"value": "W/\"38-hqBNz0QjLzR/p57TNupdUt5b/p4\""
								},
								{
									"key": "Date",
									"value": "Mon, 10 Feb 2020 03:32:48 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"Could not get project with given projectId\"\n}"
						}
					]
				},
				{
					"name": "GET /api/projects/:projectId/resources",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a935735f-f00c-49cb-b097-afdfcc2f6613",
								"exec": [
									"var res = pm.response.json();",
									"",
									"pm.test('Success', () => {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test('Data Size', () => {",
									"    pm.expect(res.length).to.be.at.least(1);",
									"});",
									"",
									"pm.test('Data Value(s)', () => {",
									"    pm.expect(res[0].name).to.equal(\"Test Resource\");",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/projects/{{ProjectID}}/resources",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"projects",
								"{{ProjectID}}",
								"resources"
							]
						}
					},
					"response": [
						{
							"name": "GET /api/projects/:projectId/resources",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL}}/api/projects/{{ProjectID}}/resources",
									"host": [
										"{{URL}}"
									],
									"path": [
										"api",
										"projects",
										"{{ProjectID}}",
										"resources"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "468"
								},
								{
									"key": "ETag",
									"value": "W/\"1d4-DI4q9wM28jKNQwUP9I5FF2BnZ7A\""
								},
								{
									"key": "Date",
									"value": "Mon, 10 Feb 2020 07:14:48 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "[\n    {\n        \"id\": 3,\n        \"name\": \"Test Resource\",\n        \"description\": \"Test Resource Description\",\n        \"project_name\": \"Test Project\",\n        \"project_description\": \"Test Project Description\"\n    }\n]"
						}
					]
				},
				{
					"name": "GET /api/projects/:projectId/resources/:resourceId (not found)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a935735f-f00c-49cb-b097-afdfcc2f6613",
								"exec": [
									"var res = pm.response.json();",
									"",
									"pm.test('Failure', () => {",
									"    pm.response.to.have.status(404);",
									"});",
									"",
									"pm.test('Data Size', () => {",
									"    pm.expect(res.projectResource).to.be.undefined;",
									"});",
									"",
									"pm.test('Error Message', () => {",
									"    pm.expect(res.message).to.equal(\"Could not get resource with given projectId & resourceId\");",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/projects/{{ProjectID}}/resources/999",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"projects",
								"{{ProjectID}}",
								"resources",
								"999"
							]
						}
					},
					"response": [
						{
							"name": "GET /api/projects/:projectId/resources/:resourceId (not found)",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL}}/api/projects/{{ProjectID}}/resources/999",
									"host": [
										"{{URL}}"
									],
									"path": [
										"api",
										"projects",
										"{{ProjectID}}",
										"resources",
										"999"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "70"
								},
								{
									"key": "ETag",
									"value": "W/\"46-Q//KCgOyLEmFTDtKA2VGR+ly6CI\""
								},
								{
									"key": "Date",
									"value": "Mon, 10 Feb 2020 08:11:36 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"Could not get resource with given projectId & resourceId\"\n}"
						}
					]
				},
				{
					"name": "GET /api/projects/:projectId/resources/:resourceId",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a935735f-f00c-49cb-b097-afdfcc2f6613",
								"exec": [
									"var res = pm.response.json();",
									"",
									"pm.test('Success', () => {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test('Data Value(s)', () => {",
									"    pm.expect(res.name).to.equal(\"Test Resource\");",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/projects/{{ProjectID}}/resources/{{ResourceID}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"projects",
								"{{ProjectID}}",
								"resources",
								"{{ResourceID}}"
							]
						}
					},
					"response": [
						{
							"name": "GET /api/projects/:projectId/resources/:resourceId",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL}}/api/projects/{{ProjectID}}/resources/{{ResourceID}}",
									"host": [
										"{{URL}}"
									],
									"path": [
										"api",
										"projects",
										"{{ProjectID}}",
										"resources",
										"{{ResourceID}}"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "168"
								},
								{
									"key": "ETag",
									"value": "W/\"a8-lpiI2pSkSOuXbp0+mhI22Sqye+g\""
								},
								{
									"key": "Date",
									"value": "Mon, 10 Feb 2020 08:16:52 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": 4,\n    \"name\": \"Test Resource\",\n    \"description\": \"Test Resource Description\",\n    \"project_name\": \"Test Project Updated\",\n    \"project_description\": \"Test Project Description Updated\"\n}"
						}
					]
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "PUT",
			"item": [
				{
					"name": "PUT /api/projects/:projectId (not found)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "0b849a9d-5d2f-4e2e-8525-e98fabc2ebd1",
								"exec": [
									"var res = pm.response.json();",
									"",
									"pm.test('Status: 404 Not Found', () => {",
									"    pm.response.to.have.status(404);",
									"});",
									"",
									"pm.test(\"Does not exist\", () => {",
									"    pm.expect(pm.response.text()).to.include(\"Could not get project with given projectId\");",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": \"Test Project Updated\",\n\t\"description\": \"Test Project Description Updated\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/projects/999",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"projects",
								"999"
							]
						}
					},
					"response": [
						{
							"name": "PUT /api/projects/:id (not found)",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"name\": \"Test Project Updated\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL}}/api/projects/999",
									"host": [
										"{{URL}}"
									],
									"path": [
										"api",
										"projects",
										"999"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "56"
								},
								{
									"key": "ETag",
									"value": "W/\"38-hqBNz0QjLzR/p57TNupdUt5b/p4\""
								},
								{
									"key": "Date",
									"value": "Mon, 10 Feb 2020 00:21:59 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"Could not get project with given projectId\"\n}"
						}
					]
				},
				{
					"name": "PUT /api/projects/:projectId (missing required data)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "afa213a4-8aad-44b4-baa1-50a06be4fe81",
								"exec": [
									"var res = pm.response.json();",
									"",
									"pm.test('Status: 400 Bad Request', () => {",
									"    pm.response.to.have.status(400);",
									"    pm.expect(pm.response.status).to.equal(\"Bad Request\");",
									"});",
									"",
									"pm.test(\"Does not exist\", () => {",
									"    pm.expect(pm.response.text()).to.include(\"Required data missing\");",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/projects/{{ProjectID}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"projects",
								"{{ProjectID}}"
							]
						}
					},
					"response": [
						{
							"name": "PUT /api/projects/:id (missing required data)",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL}}/api/projects/{{ProjectID}}",
									"host": [
										"{{URL}}"
									],
									"path": [
										"api",
										"projects",
										"{{ProjectID}}"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "35"
								},
								{
									"key": "ETag",
									"value": "W/\"23-k/F9z98s0+ugeNZx+iEQXV7rMp4\""
								},
								{
									"key": "Date",
									"value": "Mon, 10 Feb 2020 00:22:40 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"Required data missing\"\n}"
						}
					]
				},
				{
					"name": "PUT /api/projects/:projectId (valid)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "ba7c0b18-8c9b-4035-a568-56f7abaf3129",
								"exec": [
									"var res = pm.response.json();",
									"",
									"pm.test('Success', () => {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test('Data Value(s)', () => {",
									"    pm.expect(res.id).to.equal(pm.collectionVariables.get('ProjectID'));",
									"    pm.expect(res.name).to.equal('Test Project Updated');",
									"    pm.expect(res.description).to.equal('Test Project Description Updated');",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": \"Test Project Updated\",\n\t\"description\": \"Test Project Description Updated\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/projects/{{ProjectID}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"projects",
								"{{ProjectID}}"
							]
						}
					},
					"response": [
						{
							"name": "PUT /api/projects/:projectId (valid)",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"name\": \"Test Project Updated\",\n\t\"description\": \"Test Project Description Updated\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL}}/api/projects/{{ProjectID}}",
									"host": [
										"{{URL}}"
									],
									"path": [
										"api",
										"projects",
										"{{ProjectID}}"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "124"
								},
								{
									"key": "ETag",
									"value": "W/\"7c-Ds8A+IK3OEjrUKZfBFZhpTJSAak\""
								},
								{
									"key": "Date",
									"value": "Mon, 10 Feb 2020 07:30:51 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": 2,\n    \"name\": \"Test Project Updated\",\n    \"description\": \"Test Project Description Updated\",\n    \"completed\": 0,\n    \"due\": null,\n    \"done\": null\n}"
						}
					]
				},
				{
					"name": "PUT /api/projects/:projectId/tasks/:taskId (projectId not found)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "0b849a9d-5d2f-4e2e-8525-e98fabc2ebd1",
								"exec": [
									"var res = pm.response.json();",
									"",
									"pm.test('Status: 404 Not Found', () => {",
									"    pm.response.to.have.status(404);",
									"});",
									"",
									"pm.test(\"Does not exist\", () => {",
									"    pm.expect(pm.response.text()).to.include(\"Could not get project with given projectId\");",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"description\": \"Test Task Updated\",\n\t\"notes\": \"Test Task Notes Updated\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/projects/999/tasks/999",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"projects",
								"999",
								"tasks",
								"999"
							]
						}
					},
					"response": [
						{
							"name": "PUT /api/projects/:projectId/tasks/:taskId (projectId not found)",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"description\": \"Test Project Updated\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL}}/api/projects/999/tasks/999",
									"host": [
										"{{URL}}"
									],
									"path": [
										"api",
										"projects",
										"999",
										"tasks",
										"999"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "56"
								},
								{
									"key": "ETag",
									"value": "W/\"38-hqBNz0QjLzR/p57TNupdUt5b/p4\""
								},
								{
									"key": "Date",
									"value": "Mon, 10 Feb 2020 00:28:07 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"Could not get project with given projectId\"\n}"
						}
					]
				},
				{
					"name": "PUT /api/projects/:projectId/tasks/:taskId (taskId not found)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "0b849a9d-5d2f-4e2e-8525-e98fabc2ebd1",
								"exec": [
									"var res = pm.response.json();",
									"",
									"pm.test('Status: 404 Not Found', () => {",
									"    pm.response.to.have.status(404);",
									"});",
									"",
									"pm.test(\"Does not exist\", () => {",
									"    pm.expect(pm.response.text()).to.include(\"Could not get task with given projectId & taskId\");",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"description\": \"Test Task Updated\",\n\t\"notes\": \"Test Task Notes Updated\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/projects/{{ProjectID}}/tasks/999",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"projects",
								"{{ProjectID}}",
								"tasks",
								"999"
							]
						}
					},
					"response": [
						{
							"name": "PUT /api/projects/:projectId/tasks/:taskId (taskId not found)",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"description\": \"Test Project Updated\",\n\t\"notes\": \"Test Project Notes Updated\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL}}/api/projects/{{ProjectID}}/tasks/999",
									"host": [
										"{{URL}}"
									],
									"path": [
										"api",
										"projects",
										"{{ProjectID}}",
										"tasks",
										"999"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "62"
								},
								{
									"key": "ETag",
									"value": "W/\"3e-uTQTmwcxzX3mFBmEhmzCNEM4ERU\""
								},
								{
									"key": "Date",
									"value": "Mon, 10 Feb 2020 07:40:32 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"Could not get task with given projectId & taskId\"\n}"
						}
					]
				},
				{
					"name": "PUT /api/projects/:projectId/tasks/:taskId (missing required data)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "afa213a4-8aad-44b4-baa1-50a06be4fe81",
								"exec": [
									"var res = pm.response.json();",
									"",
									"pm.test('Status: 400 Bad Request', () => {",
									"    pm.response.to.have.status(400);",
									"    pm.expect(pm.response.status).to.equal(\"Bad Request\");",
									"});",
									"",
									"pm.test(\"Does not exist\", () => {",
									"    pm.expect(pm.response.text()).to.include(\"Required data missing\");",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/projects/{{ProjectID}}/tasks/{{TaskID}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"projects",
								"{{ProjectID}}",
								"tasks",
								"{{TaskID}}"
							]
						}
					},
					"response": [
						{
							"name": "PUT /api/projects/:projectId/tasks/:taskId (missing required data)",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL}}/api/projects/{{ProjectID}}/tasks/{{TaskID}}",
									"host": [
										"{{URL}}"
									],
									"path": [
										"api",
										"projects",
										"{{ProjectID}}",
										"tasks",
										"{{TaskID}}"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "35"
								},
								{
									"key": "ETag",
									"value": "W/\"23-k/F9z98s0+ugeNZx+iEQXV7rMp4\""
								},
								{
									"key": "Date",
									"value": "Mon, 10 Feb 2020 07:40:58 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"Required data missing\"\n}"
						}
					]
				},
				{
					"name": "PUT /api/projects/:projectId/tasks/:taskId (valid)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "ba7c0b18-8c9b-4035-a568-56f7abaf3129",
								"exec": [
									"var res = pm.response.json();",
									"",
									"pm.test('Success', () => {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test('Data Value(s)', () => {",
									"    pm.expect(res.id).to.equal(pm.collectionVariables.get('TaskID'));",
									"    pm.expect(res.description).to.equal('Test Task Updated');",
									"    pm.expect(res.notes).to.equal('Test Task Notes Updated');",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"description\": \"Test Task Updated\",\n\t\"notes\": \"Test Task Notes Updated\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/projects/{{ProjectID}}/tasks/{{TaskID}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"projects",
								"{{ProjectID}}",
								"tasks",
								"{{TaskID}}"
							]
						}
					},
					"response": [
						{
							"name": "PUT /api/projects/:projectId/tasks/:taskId (valid)",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"description\": \"Test Task Updated\",\n\t\"notes\": \"Test Task Notes Updated\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL}}/api/projects/{{ProjectID}}/tasks/{{TaskID}}",
									"host": [
										"{{URL}}"
									],
									"path": [
										"api",
										"projects",
										"{{ProjectID}}",
										"tasks",
										"{{TaskID}}"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "223"
								},
								{
									"key": "ETag",
									"value": "W/\"df-CQntWg/8EUJaFW/m1jIANUNZcLs\""
								},
								{
									"key": "Date",
									"value": "Mon, 10 Feb 2020 07:47:58 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": 4,\n    \"project_id\": 2,\n    \"description\": \"Test Task Updated\",\n    \"notes\": \"Test Task Notes Updated\",\n    \"completed\": 0,\n    \"due\": null,\n    \"done\": null,\n    \"project_name\": \"Test Project Updated\",\n    \"project_description\": \"Test Project Description Updated\"\n}"
						}
					]
				},
				{
					"name": "PUT /api/resources/:resourceId (resourceId not found)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "0b849a9d-5d2f-4e2e-8525-e98fabc2ebd1",
								"exec": [
									"var res = pm.response.json();",
									"",
									"pm.test('Status: 404 Not Found', () => {",
									"    pm.response.to.have.status(404);",
									"});",
									"",
									"pm.test(\"Does not exist\", () => {",
									"    pm.expect(pm.response.text()).to.include(\"Could not get resource with given resourceId\");",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": \"Test Resource Updated\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/resources/999",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"resources",
								"999"
							]
						}
					},
					"response": [
						{
							"name": "PUT /api/resources/:resourceId (resourceId not found)",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"name\": \"Test Resource Updated\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL}}/api/resources/999",
									"host": [
										"{{URL}}"
									],
									"path": [
										"api",
										"resources",
										"999"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "58"
								},
								{
									"key": "ETag",
									"value": "W/\"3a-b4GpJN/cDvyw7ceX+9Gse+Rdzvg\""
								},
								{
									"key": "Date",
									"value": "Mon, 10 Feb 2020 00:38:41 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"Could not get resource with given resourceId\"\n}"
						}
					]
				},
				{
					"name": "PUT /api/resources/:resourceId (missing required data)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "afa213a4-8aad-44b4-baa1-50a06be4fe81",
								"exec": [
									"var res = pm.response.json();",
									"",
									"pm.test('Status: 400 Bad Request', () => {",
									"    pm.response.to.have.status(400);",
									"    pm.expect(pm.response.status).to.equal(\"Bad Request\");",
									"});",
									"",
									"pm.test(\"Does not exist\", () => {",
									"    pm.expect(pm.response.text()).to.include(\"Required data missing\");",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/resources/{{ResourceID}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"resources",
								"{{ResourceID}}"
							]
						}
					},
					"response": [
						{
							"name": "PUT /api/resources/:resourceId (missing required data)",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL}}/api/resources/{{ResourceID}}",
									"host": [
										"{{URL}}"
									],
									"path": [
										"api",
										"resources",
										"{{ResourceID}}"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "35"
								},
								{
									"key": "ETag",
									"value": "W/\"23-k/F9z98s0+ugeNZx+iEQXV7rMp4\""
								},
								{
									"key": "Date",
									"value": "Mon, 10 Feb 2020 00:38:53 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"Required data missing\"\n}"
						}
					]
				},
				{
					"name": "PUT /api/resources/:resourceId (valid)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "ba7c0b18-8c9b-4035-a568-56f7abaf3129",
								"exec": [
									"var res = pm.response.json();",
									"",
									"pm.test('Success', () => {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test('Data Value(s)', () => {",
									"    pm.expect(res.id).to.equal(pm.collectionVariables.get('ResourceID'));",
									"    pm.expect(res.name).to.equal('Test Resource Updated');",
									"    pm.expect(res.description).to.equal('Test Resource Description Updated');",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": \"Test Resource Updated\",\n\t\"description\": \"Test Resource Description Updated\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/resources/{{ResourceID}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"resources",
								"{{ResourceID}}"
							]
						}
					},
					"response": [
						{
							"name": "PUT /api/resources/:resourceId (valid)",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"name\": \"Test Resource Updated\",\n\t\"description\": \"Test Resource Description Updated\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL}}/api/resources/{{ResourceID}}",
									"host": [
										"{{URL}}"
									],
									"path": [
										"api",
										"resources",
										"{{ResourceID}}"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "89"
								},
								{
									"key": "ETag",
									"value": "W/\"59-9Pj84HxA4Ye5SQE1KY+reiLE//M\""
								},
								{
									"key": "Date",
									"value": "Mon, 10 Feb 2020 07:54:29 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": 3,\n    \"name\": \"Test Resource Updated\",\n    \"description\": \"Test Resource Description Updated\"\n}"
						}
					]
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "DELETE",
			"item": [
				{
					"name": "DELETE /api/projects/:projectId/tasks/:taskId (projectId not found)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a76ad4c8-5756-43a8-a71d-98c639ad7158",
								"exec": [
									"var res = pm.response.json();",
									"",
									"pm.test('Status: 404 Not Found', () => {",
									"    pm.response.to.have.status(404);",
									"    pm.expect(pm.response.status).to.equal(\"Not Found\");",
									"});",
									"",
									"pm.test(\"Does not exist\", () => {",
									"    pm.expect(pm.response.text()).to.include(\"Could not get task with given projectId & taskId\");",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/projects/999/tasks/999",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"projects",
								"999",
								"tasks",
								"999"
							]
						}
					},
					"response": [
						{
							"name": "DELETE /api/projects/:projectId/tasks/:taskId (projectId not found)",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL}}/api/projects/999/tasks/999",
									"host": [
										"{{URL}}"
									],
									"path": [
										"api",
										"projects",
										"999",
										"tasks",
										"999"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "62"
								},
								{
									"key": "ETag",
									"value": "W/\"3e-uTQTmwcxzX3mFBmEhmzCNEM4ERU\""
								},
								{
									"key": "Date",
									"value": "Mon, 10 Feb 2020 07:59:57 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"Could not get task with given projectId & taskId\"\n}"
						}
					]
				},
				{
					"name": "DELETE /api/projects/:projectId/tasks/:taskId (taskId not found)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a76ad4c8-5756-43a8-a71d-98c639ad7158",
								"exec": [
									"var res = pm.response.json();",
									"",
									"pm.test('Status: 404 Not Found', () => {",
									"    pm.response.to.have.status(404);",
									"    pm.expect(pm.response.status).to.equal(\"Not Found\");",
									"});",
									"",
									"pm.test(\"Does not exist\", () => {",
									"    pm.expect(pm.response.text()).to.include(\"Could not get task with given projectId & taskId\");",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/projects/{{ProjectID}}/tasks/999",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"projects",
								"{{ProjectID}}",
								"tasks",
								"999"
							]
						}
					},
					"response": [
						{
							"name": "DELETE /api/projects/:projectId/tasks/:taskId (taskId not found)",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL}}/api/projects/{{ProjectID}}/tasks/999",
									"host": [
										"{{URL}}"
									],
									"path": [
										"api",
										"projects",
										"{{ProjectID}}",
										"tasks",
										"999"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "62"
								},
								{
									"key": "ETag",
									"value": "W/\"3e-uTQTmwcxzX3mFBmEhmzCNEM4ERU\""
								},
								{
									"key": "Date",
									"value": "Mon, 10 Feb 2020 08:00:18 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"Could not get task with given projectId & taskId\"\n}"
						}
					]
				},
				{
					"name": "DELETE /api/projects/:projectId/tasks/:taskId",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "9412206e-ff39-4881-a557-4eb1e3307710",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "ff5472e0-ad9e-406b-84d4-0b1cd9ac8bec",
								"exec": [
									"var res = pm.response.json();",
									"",
									"pm.test('Success', () => {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test('Data Value(s)', () => {",
									"    pm.expect(res.removedProjectTask).to.equal(pm.collectionVariables.get('TaskID'));",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/projects/{{ProjectID}}/tasks/{{TaskID}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"projects",
								"{{ProjectID}}",
								"tasks",
								"{{TaskID}}"
							]
						}
					},
					"response": [
						{
							"name": "DELETE /api/projects/:projectId/tasks/:taskId",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL}}/api/projects/{{ProjectID}}/tasks/{{TaskID}}",
									"host": [
										"{{URL}}"
									],
									"path": [
										"api",
										"projects",
										"{{ProjectID}}",
										"tasks",
										"{{TaskID}}"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "24"
								},
								{
									"key": "ETag",
									"value": "W/\"18-upOxJNeL7dkvEbxFBJeOH1gYICY\""
								},
								{
									"key": "Date",
									"value": "Mon, 10 Feb 2020 08:00:35 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"removedProjectTask\": 4\n}"
						}
					]
				},
				{
					"name": "DELETE /api/projects/:projectId/resources/:resourceId (projectId not found)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a76ad4c8-5756-43a8-a71d-98c639ad7158",
								"exec": [
									"var res = pm.response.json();",
									"",
									"pm.test('Status: 404 Not Found', () => {",
									"    pm.response.to.have.status(404);",
									"    pm.expect(pm.response.status).to.equal(\"Not Found\");",
									"});",
									"",
									"pm.test(\"Does not exist\", () => {",
									"    pm.expect(pm.response.text()).to.include(\"Could not get project with given projectId\");",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/projects/999/resources/999",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"projects",
								"999",
								"resources",
								"999"
							]
						}
					},
					"response": [
						{
							"name": "DELETE /api/projects/:projectId/resources/:resourceId (projectId not found)",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL}}/api/projects/999/resources/999",
									"host": [
										"{{URL}}"
									],
									"path": [
										"api",
										"projects",
										"999",
										"resources",
										"999"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "56"
								},
								{
									"key": "ETag",
									"value": "W/\"38-hqBNz0QjLzR/p57TNupdUt5b/p4\""
								},
								{
									"key": "Date",
									"value": "Mon, 10 Feb 2020 08:00:55 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"Could not get project with given projectId\"\n}"
						}
					]
				},
				{
					"name": "DELETE /api/projects/:projectId/resources/:resourceId (resourceId not found)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a76ad4c8-5756-43a8-a71d-98c639ad7158",
								"exec": [
									"var res = pm.response.json();",
									"",
									"pm.test('Status: 404 Not Found', () => {",
									"    pm.response.to.have.status(404);",
									"    pm.expect(pm.response.status).to.equal(\"Not Found\");",
									"});",
									"",
									"pm.test(\"Does not exist\", () => {",
									"    pm.expect(pm.response.text()).to.include(\"Could not get resource with given projectId & resourceId\");",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/projects/{{ProjectID}}/resources/999",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"projects",
								"{{ProjectID}}",
								"resources",
								"999"
							]
						}
					},
					"response": [
						{
							"name": "DELETE /api/projects/:projectId/resources/:resourceId (resourceId not found)",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL}}/api/projects/{{ProjectID}}/resources/999",
									"host": [
										"{{URL}}"
									],
									"path": [
										"api",
										"projects",
										"{{ProjectID}}",
										"resources",
										"999"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "70"
								},
								{
									"key": "ETag",
									"value": "W/\"46-Q//KCgOyLEmFTDtKA2VGR+ly6CI\""
								},
								{
									"key": "Date",
									"value": "Mon, 10 Feb 2020 08:01:17 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"Could not get resource with given projectId & resourceId\"\n}"
						}
					]
				},
				{
					"name": "DELETE /api/projects/:projectId/resources/:resourceId",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "9412206e-ff39-4881-a557-4eb1e3307710",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "ff5472e0-ad9e-406b-84d4-0b1cd9ac8bec",
								"exec": [
									"var res = pm.response.json();",
									"",
									"pm.test('Success', () => {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test('Data Value(s)', () => {",
									"    pm.expect(res.removedProjectResource).to.equal(pm.collectionVariables.get('ResourceID'));",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/projects/{{ProjectID}}/resources/{{ResourceID}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"projects",
								"{{ProjectID}}",
								"resources",
								"{{ResourceID}}"
							]
						}
					},
					"response": [
						{
							"name": "DELETE /api/projects/:projectId/resources/:resourceId",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL}}/api/projects/{{ProjectID}}/resources/{{ResourceID}}",
									"host": [
										"{{URL}}"
									],
									"path": [
										"api",
										"projects",
										"{{ProjectID}}",
										"resources",
										"{{ResourceID}}"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "28"
								},
								{
									"key": "ETag",
									"value": "W/\"1c-ilJPnwRixKj3BU28MiGBVBTMy1o\""
								},
								{
									"key": "Date",
									"value": "Mon, 10 Feb 2020 08:17:44 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"removedProjectResource\": 4\n}"
						}
					]
				},
				{
					"name": "DELETE /api/resources/:resourceId (resourceId not found)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a76ad4c8-5756-43a8-a71d-98c639ad7158",
								"exec": [
									"var res = pm.response.json();",
									"",
									"pm.test('Status: 404 Not Found', () => {",
									"    pm.response.to.have.status(404);",
									"    pm.expect(pm.response.status).to.equal(\"Not Found\");",
									"});",
									"",
									"pm.test(\"Does not exist\", () => {",
									"    pm.expect(pm.response.text()).to.include(\"Could not get resource with given resourceId\");",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/resources/999",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"resources",
								"999"
							]
						}
					},
					"response": [
						{
							"name": "DELETE /api/resources/:resourceId (resourceId not found)",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL}}/api/resources/999",
									"host": [
										"{{URL}}"
									],
									"path": [
										"api",
										"resources",
										"999"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "58"
								},
								{
									"key": "ETag",
									"value": "W/\"3a-b4GpJN/cDvyw7ceX+9Gse+Rdzvg\""
								},
								{
									"key": "Date",
									"value": "Mon, 10 Feb 2020 07:58:41 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"Could not get resource with given resourceId\"\n}"
						}
					]
				},
				{
					"name": "DELETE /api/resources/:resourceId",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "9412206e-ff39-4881-a557-4eb1e3307710",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "ff5472e0-ad9e-406b-84d4-0b1cd9ac8bec",
								"exec": [
									"var res = pm.response.json();",
									"",
									"pm.test('Success', () => {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test('Data Value(s)', () => {",
									"    pm.expect(res.removedResource).to.equal(pm.collectionVariables.get('ResourceID'));",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/resources/{{ResourceID}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"resources",
								"{{ResourceID}}"
							]
						}
					},
					"response": [
						{
							"name": "DELETE /api/resources/:resourceId",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL}}/api/resources/{{ResourceID}}",
									"host": [
										"{{URL}}"
									],
									"path": [
										"api",
										"resources",
										"{{ResourceID}}"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "21"
								},
								{
									"key": "ETag",
									"value": "W/\"15-seasKI59TPF4HX9nt0sCbWUDQyY\""
								},
								{
									"key": "Date",
									"value": "Mon, 10 Feb 2020 07:59:16 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"removedResource\": 3\n}"
						}
					]
				},
				{
					"name": "DELETE /api/projects/:projectId (not found)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a76ad4c8-5756-43a8-a71d-98c639ad7158",
								"exec": [
									"var res = pm.response.json();",
									"",
									"pm.test('Status: 404 Not Found', () => {",
									"    pm.response.to.have.status(404);",
									"    pm.expect(pm.response.status).to.equal(\"Not Found\");",
									"});",
									"",
									"pm.test(\"Does not exist\", () => {",
									"    pm.expect(pm.response.text()).to.include(\"Could not get project with given projectId\");",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/projects/999",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"projects",
								"999"
							]
						}
					},
					"response": [
						{
							"name": "DELETE /api/projects/:projectId (not found)",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL}}/api/projects/999",
									"host": [
										"{{URL}}"
									],
									"path": [
										"api",
										"projects",
										"999"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "56"
								},
								{
									"key": "ETag",
									"value": "W/\"38-hqBNz0QjLzR/p57TNupdUt5b/p4\""
								},
								{
									"key": "Date",
									"value": "Mon, 10 Feb 2020 00:40:51 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"Could not get project with given projectId\"\n}"
						}
					]
				},
				{
					"name": "DELETE /api/projects/:projectId",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "9412206e-ff39-4881-a557-4eb1e3307710",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "ff5472e0-ad9e-406b-84d4-0b1cd9ac8bec",
								"exec": [
									"var res = pm.response.json();",
									"",
									"pm.test('Success', () => {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test('Data Value(s)', () => {",
									"    pm.expect(res.removedProject).to.equal(pm.collectionVariables.get('ProjectID'));",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/projects/{{ProjectID}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"projects",
								"{{ProjectID}}"
							]
						}
					},
					"response": [
						{
							"name": "DELETE /api/projects/:projectId",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL}}/api/projects/{{ProjectID}}",
									"host": [
										"{{URL}}"
									],
									"path": [
										"api",
										"projects",
										"{{ProjectID}}"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "20"
								},
								{
									"key": "ETag",
									"value": "W/\"14-unld96SCo35RE4qg4LRTobIs494\""
								},
								{
									"key": "Date",
									"value": "Mon, 10 Feb 2020 08:18:34 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"removedProject\": 2\n}"
						}
					]
				}
			],
			"protocolProfileBehavior": {}
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "81005885-9980-4e6e-b9bf-0043d8f3b03c",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "d4f0b23e-bbbf-4e4e-9654-506bc8e3d5e8",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"id": "74235bc2-d7ca-4332-8c88-eb3770441713",
			"key": "ProjectID",
			"value": 3,
			"type": "number"
		},
		{
			"id": "fb417c19-e30a-4ee0-9681-85ca34fe4ec6",
			"key": "TaskID",
			"value": 4,
			"type": "number"
		},
		{
			"id": "9dc99e21-4f1a-4aa3-9495-d6b00a6ce21c",
			"key": "ResourceID",
			"value": 4,
			"type": "number"
		}
	],
	"protocolProfileBehavior": {}
}